@startuml Library
!theme vibrant

participant Participant 
actor       Member     
actor       Librarian  
entity "Borrowing System" as BS
entity      Book

== Borrowing a Book ==

Member->Librarian: Request to borrow book
activate Member
activate Librarian
Librarian->BS: Check availability of requested book
activate BS
BS->Book: Is the book available?
activate Book
Book --> BS: Available/Not Available
deactivate Book
BS-->Librarian: Display availability message
Librarian->Member: Inform result of borrowing

alt Book Available
    Librarian->BS: Create borrowing request
    BS->Book: Update book status to "Borrowed"
    BS->Librarian: Record member borrowing
    deactivate BS
    Librarian->Member: Give book
end

deactivate Librarian
deactivate Member

== Returning a Book ==

Member->Librarian: Return book
activate Member
activate Librarian
Librarian->BS: Record member return
activate BS
BS->Book: Update book status as "Available"
BS->Librarian: Display return confirmation 
deactivate BS
Librarian->Member: Inform successful return 
deactivate Librarian
deactivate Member

@enduml
